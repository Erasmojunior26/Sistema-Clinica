// <auto-generated />
using System;
using ClinicaSistema.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClinicaSistema.Migrations
{
    [DbContext(typeof(dbclinicaContext))]
    [Migration("20240928203744_Teste")]
    partial class Teste
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.33")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ClinicaSistema.Models.Consulta", b =>
                {
                    b.Property<int>("ConsultaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ConsultaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConsultaId"), 1L, 1);

                    b.Property<DateTime?>("DataConsulta")
                        .HasColumnType("date");

                    b.Property<int?>("EspecialidadeId")
                        .HasColumnType("int")
                        .HasColumnName("EspecialidadeID");

                    b.Property<int?>("MedicoId")
                        .HasColumnType("int")
                        .HasColumnName("MedicoID");

                    b.Property<int?>("PacienteId")
                        .HasColumnType("int")
                        .HasColumnName("PacienteID");

                    b.Property<string>("Procedimento")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("ConsultaId");

                    b.HasIndex("EspecialidadeId");

                    b.HasIndex("MedicoId");

                    b.HasIndex("PacienteId");

                    b.ToTable("Consultas");
                });

            modelBuilder.Entity("ClinicaSistema.Models.Especialidade", b =>
                {
                    b.Property<int>("EspecialidadeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EspecialidadeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EspecialidadeId"), 1L, 1);

                    b.Property<string>("Nome")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("EspecialidadeId");

                    b.ToTable("Especialidades");
                });

            modelBuilder.Entity("ClinicaSistema.Models.Medicamento", b =>
                {
                    b.Property<int>("MedicamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MedicamentoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MedicamentoId"), 1L, 1);

                    b.Property<int?>("ConsultaId")
                        .HasColumnType("int")
                        .HasColumnName("ConsultaID");

                    b.Property<string>("Dosagem")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NomeMedicamento")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("MedicamentoId");

                    b.HasIndex("ConsultaId");

                    b.ToTable("Medicamentos");
                });

            modelBuilder.Entity("ClinicaSistema.Models.Medico", b =>
                {
                    b.Property<int>("MedicosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MedicosID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MedicosId"), 1L, 1);

                    b.Property<int?>("EspecialidadeId")
                        .HasColumnType("int")
                        .HasColumnName("EspecialidadeID");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("MedicosId")
                        .HasName("PK__Medicos__9FB1F6DBFFE8CA0F");

                    b.HasIndex("EspecialidadeId");

                    b.ToTable("Medicos");
                });

            modelBuilder.Entity("ClinicaSistema.Models.Paciente", b =>
                {
                    b.Property<int>("PacienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PacienteID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PacienteId"), 1L, 1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("PacienteId");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("ClinicaSistema.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"), 1L, 1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Perfil")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ClinicaSistema.Models.Consulta", b =>
                {
                    b.HasOne("ClinicaSistema.Models.Especialidade", "Especialidade")
                        .WithMany("Consulta")
                        .HasForeignKey("EspecialidadeId")
                        .HasConstraintName("FK__Consultas__Espec__6A30C649");

                    b.HasOne("ClinicaSistema.Models.Medico", "Medico")
                        .WithMany("Consulta")
                        .HasForeignKey("MedicoId")
                        .HasConstraintName("FK__Consultas__Medic__6B24EA82");

                    b.HasOne("ClinicaSistema.Models.Paciente", "Paciente")
                        .WithMany("Consulta")
                        .HasForeignKey("PacienteId")
                        .HasConstraintName("FK__Consultas__Pacie__6C190EBB");

                    b.Navigation("Especialidade");

                    b.Navigation("Medico");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("ClinicaSistema.Models.Medicamento", b =>
                {
                    b.HasOne("ClinicaSistema.Models.Consulta", "Consulta")
                        .WithMany("Medicamentos")
                        .HasForeignKey("ConsultaId")
                        .HasConstraintName("FK__Medicamen__Consu__6EF57B66");

                    b.Navigation("Consulta");
                });

            modelBuilder.Entity("ClinicaSistema.Models.Medico", b =>
                {
                    b.HasOne("ClinicaSistema.Models.Especialidade", "Especialidade")
                        .WithMany("Medicos")
                        .HasForeignKey("EspecialidadeId")
                        .HasConstraintName("FK__Medicos__Especia__5EBF139D");

                    b.Navigation("Especialidade");
                });

            modelBuilder.Entity("ClinicaSistema.Models.Consulta", b =>
                {
                    b.Navigation("Medicamentos");
                });

            modelBuilder.Entity("ClinicaSistema.Models.Especialidade", b =>
                {
                    b.Navigation("Consulta");

                    b.Navigation("Medicos");
                });

            modelBuilder.Entity("ClinicaSistema.Models.Medico", b =>
                {
                    b.Navigation("Consulta");
                });

            modelBuilder.Entity("ClinicaSistema.Models.Paciente", b =>
                {
                    b.Navigation("Consulta");
                });
#pragma warning restore 612, 618
        }
    }
}
